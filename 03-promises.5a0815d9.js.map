{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBAE3CF,EAAKM,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEMC,OAAON,EAAWO,OACnBD,OAAOL,EAAUM,OACfD,OAAOJ,EAAYK,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=delay]');\nconst delayStep = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(firstDelay.value);\n  let step = Number(delayStep.value);\n  let amount = Number(amountInput.value);\n  let position = 0;\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountInput","addEventListener","event","preventDefault","Number","value"],"version":3,"file":"03-promises.5a0815d9.js.map"}